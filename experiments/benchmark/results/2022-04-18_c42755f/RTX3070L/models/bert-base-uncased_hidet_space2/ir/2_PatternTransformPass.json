{
  "graphs": [
    {
      "name": "",
      "inputs": [
        {
          "name": "input:0",
          "arguments": [
            {
              "name": "input:0",
              "type": {
                "string": "int64[1, 128]",
                "shape": {
                  "dimensions": [
                    1,
                    128
                  ]
                },
                "dataType": "int64"
              }
            }
          ],
          "visible": true
        },
        {
          "name": "input:1",
          "arguments": [
            {
              "name": "input:1",
              "type": {
                "string": "int64[1, 128]",
                "shape": {
                  "dimensions": [
                    1,
                    128
                  ]
                },
                "dataType": "int64"
              }
            }
          ],
          "visible": true
        },
        {
          "name": "input:2",
          "arguments": [
            {
              "name": "input:2",
              "type": {
                "string": "int64[1, 128]",
                "shape": {
                  "dimensions": [
                    1,
                    128
                  ]
                },
                "dataType": "int64"
              }
            }
          ],
          "visible": true
        }
      ],
      "outputs": [
        {
          "name": "output:0",
          "arguments": [
            {
              "name": "Add172:0",
              "type": {
                "string": "float32[1, 128, 768]",
                "shape": {
                  "dimensions": [
                    1,
                    128,
                    768
                  ]
                },
                "dataType": "float32"
              }
            }
          ],
          "visible": true
        },
        {
          "name": "output:1",
          "arguments": [
            {
              "name": "Tanh1:0",
              "type": {
                "string": "float32[1, 768]",
                "shape": {
                  "dimensions": [
                    1,
                    768
                  ]
                },
                "dataType": "float32"
              }
            }
          ],
          "visible": true
        }
      ],
      "nodes": [
        {
          "name": "Take1",
          "type": {
            "name": "Take",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "const:0",
                  "type": {
                    "string": "float32[30522, 768]",
                    "shape": {
                      "dimensions": [
                        30522,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "input:0",
                  "type": {
                    "string": "int64[1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Take1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: take",
            "  compute: TensorCompute(output, shape=(1, 128, 768), axes=(v, v_1, v_2), value=data[indices[v, v_1], v_2])",
            "  params: data: TensorType(ScalarType(float32), [30522, 768], global, RowMajorLayout), indices: TensorType(ScalarType(int64), [1, 128], host, RowMajorLayout), output: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Take2",
          "type": {
            "name": "Take",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "const:1",
                  "type": {
                    "string": "float32[2, 768]",
                    "shape": {
                      "dimensions": [
                        2,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "input:2",
                  "type": {
                    "string": "int64[1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Take2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: take",
            "  compute: TensorCompute(output, shape=(1, 128, 768), axes=(v, v_1, v_2), value=data[indices[v, v_1], v_2])",
            "  params: data: TensorType(ScalarType(float32), [2, 768], global, RowMajorLayout), indices: TensorType(ScalarType(int64), [1, 128], global, RowMajorLayout), output: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add1",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Take1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Take2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add2",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:2",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean1",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean1:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub1",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean1:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow1",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:3",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean2",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean2:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add3",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean2:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:4",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add3:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt1",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add3:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt1:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide1",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt1:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply1",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:5",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add4",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:6",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul1",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:7",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add5",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul1:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:8",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape1",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape1:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose1",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape1:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose1:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten1",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose1:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten1:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul2",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:9",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add6",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:10",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape2",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape2:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose2",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape2:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose2:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten2",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose2:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten2:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul3",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten1:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten2:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul3:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape3",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul3:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape3:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide2",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape3:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:11",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide2:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Unsqueeze1",
          "type": {
            "name": "Unsqueeze",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "input:1",
                  "type": {
                    "string": "int64[1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Unsqueeze1:0",
                  "type": {
                    "string": "int64[1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 1, 128), axes=(v, v_1, v_2), value=x[((v / 1) % 1), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(int64), [1, 128], global, RowMajorLayout), y: TensorType(ScalarType(int64), [1, 1, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Unsqueeze2",
          "type": {
            "name": "Unsqueeze",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Unsqueeze1:0",
                  "type": {
                    "string": "int64[1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Unsqueeze2:0",
                  "type": {
                    "string": "int64[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 1, 1, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_1 / 1) % 1), ((v_3 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(int64), [1, 1, 128], global, RowMajorLayout), y: TensorType(ScalarType(int64), [1, 1, 1, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Cast1",
          "type": {
            "name": "Cast",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Unsqueeze2:0",
                  "type": {
                    "string": "int64[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "int64"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Cast1:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dtype",
              "type": "str",
              "value": "float32",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: cast",
            "  compute: TensorCompute(y, shape=(1, 1, 1, 128), axes=(v, v_1, v_2, v_3), value=cast(ScalarType(float32), x[v, v_1, v_2, v_3]))",
            "  params: x: TensorType(ScalarType(int64), [1, 1, 1, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub2",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "const:12",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Cast1:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 1, 1, 128), axes=(v, v_1, v_2, v_3), value=(x[] - y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply2",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:13",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "-10000.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 1, 1, 128), axes=(v, v_1, v_2, v_3), value=(x[0, 0, 0, v_3] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add7",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide2:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add7:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax1",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add7:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax1:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten3",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax1:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten3:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul4",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:14",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add8",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:15",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape4",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape4:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose3",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape4:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose3:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten4",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose3:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten4:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul5",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten3:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten4:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul5:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape5",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul5:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape5:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose4",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape5:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose4:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape6",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose4:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul6",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:16",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add9",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:17",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add10",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean3",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean3:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub3",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean3:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow2",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:18",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean4",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow2:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean4:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add11",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean4:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:19",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add11:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt2",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add11:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt2:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide3",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt2:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply3",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:20",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add12",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:21",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul7",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:22",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul7:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add13",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul7:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:23",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add13:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide4",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add13:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:24",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide4:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf1",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide4:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf1:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add14",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf1:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:25",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add14:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply4",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add13:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add14:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply4:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply5",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply4:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:26",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply5:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul8",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply5:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:27",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add15",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:28",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add16",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean5",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean5:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub4",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean5:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow3",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:29",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean6",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow3:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean6:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add17",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean6:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:30",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add17:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt3",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add17:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt3:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide5",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt3:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply6",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:31",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add18",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:32",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul9",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:33",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add19",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:34",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape7",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape7:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose5",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape7:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose5:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten5",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose5:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten5:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul10",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:35",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add20",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:36",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape8",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape8:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose6",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape8:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose6:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten6",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose6:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten6:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul11",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten5:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten6:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul11:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape9",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul11:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape9:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide6",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape9:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:37",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide6:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add21",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide6:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add21:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax2",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add21:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax2:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten7",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax2:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten7:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul12",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:38",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add22",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:39",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape10",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape10:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose7",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape10:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose7:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten8",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose7:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten8:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul13",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten7:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten8:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul13:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape11",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul13:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape11:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose8",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape11:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose8:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape12",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose8:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul14",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:40",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add23",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:41",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add24",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean7",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean7:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub5",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean7:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow4",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:42",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean8",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow4:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean8:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add25",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean8:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:43",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add25:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt4",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add25:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt4:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide7",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt4:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply7",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:44",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add26",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:45",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul15",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:46",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul15:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add27",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul15:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:47",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add27:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide8",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add27:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:48",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide8:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf2",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide8:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf2:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add28",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf2:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:49",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add28:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply8",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add27:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add28:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply8:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply9",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply8:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:50",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply9:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul16",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply9:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:51",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add29",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:52",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add29:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add30",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add29:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean9",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean9:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub6",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean9:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow5",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:53",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean10",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow5:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean10:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add31",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean10:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:54",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add31:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt5",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add31:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt5:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide9",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt5:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply10",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:55",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add32",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:56",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul17",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:57",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add33",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:58",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add33:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape13",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add33:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape13:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose9",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape13:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose9:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten9",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose9:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten9:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul18",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:59",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add34",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:60",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add34:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape14",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add34:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape14:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose10",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape14:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose10:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten10",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose10:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten10:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul19",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten9:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten10:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul19:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape15",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul19:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape15:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide10",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape15:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:61",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide10:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add35",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide10:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add35:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax3",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add35:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax3:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten11",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax3:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten11:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul20",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:62",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add36",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:63",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add36:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape16",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add36:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape16:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose11",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape16:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose11:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten12",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose11:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten12:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul21",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten11:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten12:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul21:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape17",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul21:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape17:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose12",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape17:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose12:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape18",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose12:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul22",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:64",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add37",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:65",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add37:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add38",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add37:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean11",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean11:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub7",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean11:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow6",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:66",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean12",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow6:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean12:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add39",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean12:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:67",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add39:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt6",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add39:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt6:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide11",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt6:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply11",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:68",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add40",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:69",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add40:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul23",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add40:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:70",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul23:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add41",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul23:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:71",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add41:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide12",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add41:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:72",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide12:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf3",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide12:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf3:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add42",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf3:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:73",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add42:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply12",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add41:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add42:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply12:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply13",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply12:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:74",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply13:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul24",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply13:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:75",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add43",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:76",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add43:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add44",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add43:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add40:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add44:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean13",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add44:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean13:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub8",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add44:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean13:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow7",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:77",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean14",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow7:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean14:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add45",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean14:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:78",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add45:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt7",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add45:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt7:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide13",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt7:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply14",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:79",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add46",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:80",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul25",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:81",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add47",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:82",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add47:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape19",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add47:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape19:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose13",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape19:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose13:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten13",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose13:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten13:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul26",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:83",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add48",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:84",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add48:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape20",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add48:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape20:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose14",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape20:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose14:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten14",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose14:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten14:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul27",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten13:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten14:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul27:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape21",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul27:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape21:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide14",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape21:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:85",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide14:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add49",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide14:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add49:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax4",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add49:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax4:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten15",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax4:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten15:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul28",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:86",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul28:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add50",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul28:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:87",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add50:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape22",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add50:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape22:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose15",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape22:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose15:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten16",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose15:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten16:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul29",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten15:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten16:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul29:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape23",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul29:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape23:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose16",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape23:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose16:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape24",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose16:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul30",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:88",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add51",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:89",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add51:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add52",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add51:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add52:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean15",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add52:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean15:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub9",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add52:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean15:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow8",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:90",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean16",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow8:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean16:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add53",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean16:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:91",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add53:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt8",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add53:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt8:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide15",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt8:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply15",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:92",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add54",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:93",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul31",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:94",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul31:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add55",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul31:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:95",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add55:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide16",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add55:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:96",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide16:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf4",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide16:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf4:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add56",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf4:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:97",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add56:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply16",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add55:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add56:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply16:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply17",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply16:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:98",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply17:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul32",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply17:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:99",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add57",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul32:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:100",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add57:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add58",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add57:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add58:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean17",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add58:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean17:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub10",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add58:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean17:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow9",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:101",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean18",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow9:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean18:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add59",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean18:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:102",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add59:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt9",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add59:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt9:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide17",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt9:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply18",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:103",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add60",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:104",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul33",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:105",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul33:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add61",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul33:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:106",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add61:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape25",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add61:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape25:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose17",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape25:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose17:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten17",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose17:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten17:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul34",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:107",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul34:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add62",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul34:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:108",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add62:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape26",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add62:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape26:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose18",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape26:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose18:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten18",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose18:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten18:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul35",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten17:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten18:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul35:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape27",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul35:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape27:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide18",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape27:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:109",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide18:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add63",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide18:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add63:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax5",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add63:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax5:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten19",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax5:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten19:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul36",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:110",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul36:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add64",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul36:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:111",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add64:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape28",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add64:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape28:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose19",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape28:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose19:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten20",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose19:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten20:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul37",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten19:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten20:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul37:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape29",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul37:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape29:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose20",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape29:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose20:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape30",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose20:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul38",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:112",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add65",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:113",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add65:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add66",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add65:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean19",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean19:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub11",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean19:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow10",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:114",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean20",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow10:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean20:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add67",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean20:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:115",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add67:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt10",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add67:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt10:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide19",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt10:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply19",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:116",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add68",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:117",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add68:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul39",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add68:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:118",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul39:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add69",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul39:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:119",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add69:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide20",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add69:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:120",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide20:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf5",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide20:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf5:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add70",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf5:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:121",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add70:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply20",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add69:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add70:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply20:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply21",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply20:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:122",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply21:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul40",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply21:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:123",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul40:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add71",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul40:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:124",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add71:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add72",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add71:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add68:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean21",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean21:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub12",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean21:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow11",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:125",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean22",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow11:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean22:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add73",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean22:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:126",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add73:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt11",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add73:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt11:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide21",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt11:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply22",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:127",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add74",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:128",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul41",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:129",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul41:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add75",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul41:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:130",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add75:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape31",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add75:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape31:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose21",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape31:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose21:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten21",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose21:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten21:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul42",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:131",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul42:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add76",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul42:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:132",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add76:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape32",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add76:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape32:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose22",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape32:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose22:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten22",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose22:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten22:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul43",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten21:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten22:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul43:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape33",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul43:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape33:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide22",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape33:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:133",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide22:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add77",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide22:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add77:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax6",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add77:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax6:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten23",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax6:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten23:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul44",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:134",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul44:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add78",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul44:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:135",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add78:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape34",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add78:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape34:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose23",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape34:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose23:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten24",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose23:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten24:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul45",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten23:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten24:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul45:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape35",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul45:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape35:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose24",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape35:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose24:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape36",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose24:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape36:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul46",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape36:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:136",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add79",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:137",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add79:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add80",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add79:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add80:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean23",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add80:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean23:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub13",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add80:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean23:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow12",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:138",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean24",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow12:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean24:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add81",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean24:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:139",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add81:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt12",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add81:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt12:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide23",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt12:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply23",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:140",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add82",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:141",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add82:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul47",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add82:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:142",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul47:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add83",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul47:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:143",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add83:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide24",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add83:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:144",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide24:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf6",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide24:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf6:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add84",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf6:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:145",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add84:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply24",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add83:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add84:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply24:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply25",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply24:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:146",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply25:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul48",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply25:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:147",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul48:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add85",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul48:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:148",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add85:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add86",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add85:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add82:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add86:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean25",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add86:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean25:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub14",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add86:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean25:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow13",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:149",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean26",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow13:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean26:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add87",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean26:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:150",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add87:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt13",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add87:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt13:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide25",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt13:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply26",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:151",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add88",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:152",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul49",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:153",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul49:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add89",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul49:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:154",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add89:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape37",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add89:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape37:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose25",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape37:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose25:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten25",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose25:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten25:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul50",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:155",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul50:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add90",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul50:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:156",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add90:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape38",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add90:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape38:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose26",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape38:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose26:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten26",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose26:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten26:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul51",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten25:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten26:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul51:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape39",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul51:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape39:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide26",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape39:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:157",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide26:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add91",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide26:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add91:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax7",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add91:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax7:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten27",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax7:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten27:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul52",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:158",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul52:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add92",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul52:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:159",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add92:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape40",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add92:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape40:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose27",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape40:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose27:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten28",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose27:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten28:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul53",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten27:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten28:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul53:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape41",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul53:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape41:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose28",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape41:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose28:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape42",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose28:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape42:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul54",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape42:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:160",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add93",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:161",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add93:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add94",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add93:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add94:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean27",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add94:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean27:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub15",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add94:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean27:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow14",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:162",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean28",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow14:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean28:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add95",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean28:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:163",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add95:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt14",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add95:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt14:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide27",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt14:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide27:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply27",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide27:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:164",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply27:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add96",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply27:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:165",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add96:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul55",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add96:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:166",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul55:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add97",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul55:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:167",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add97:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide28",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add97:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:168",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide28:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf7",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide28:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf7:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add98",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf7:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:169",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add98:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply28",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add97:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add98:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply28:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply29",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply28:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:170",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply29:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul56",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply29:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:171",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul56:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add99",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul56:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:172",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add99:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add100",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add99:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add96:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add100:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean29",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add100:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean29:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub16",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add100:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean29:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow15",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:173",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean30",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow15:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean30:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add101",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean30:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:174",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add101:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt15",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add101:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt15:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide29",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt15:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide29:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply30",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide29:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:175",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add102",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply30:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:176",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add102:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul57",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add102:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:177",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul57:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add103",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul57:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:178",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add103:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape43",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add103:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape43:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose29",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape43:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose29:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten29",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose29:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten29:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul58",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add102:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:179",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul58:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add104",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul58:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:180",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add104:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape44",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add104:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape44:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose30",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape44:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose30:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten30",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose30:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten30:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul59",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten29:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten30:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul59:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape45",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul59:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape45:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide30",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape45:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:181",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide30:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add105",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide30:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add105:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax8",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add105:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax8:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten31",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax8:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten31:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul60",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add102:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:182",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add106",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:183",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add106:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape46",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add106:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape46:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose31",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape46:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose31:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten32",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose31:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten32:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul61",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten31:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten32:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul61:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape47",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul61:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape47:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose32",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape47:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose32:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape48",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose32:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape48:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul62",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape48:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:184",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul62:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add107",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul62:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:185",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add107:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add108",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add107:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add102:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add108:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean31",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add108:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean31:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub17",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add108:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean31:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow16",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:186",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean32",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow16:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean32:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add109",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean32:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:187",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add109:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt16",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add109:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt16:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide31",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt16:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide31:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply31",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide31:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:188",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply31:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add110",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply31:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:189",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add110:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul63",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add110:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:190",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul63:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add111",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul63:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:191",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add111:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide32",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add111:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:192",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide32:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf8",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide32:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf8:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add112",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf8:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:193",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add112:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply32",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add111:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add112:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply32:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply33",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply32:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:194",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply33:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul64",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply33:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:195",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul64:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add113",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul64:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:196",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add113:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add114",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add113:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add110:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add114:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean33",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add114:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean33:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub18",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add114:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean33:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow17",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:197",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean34",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow17:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean34:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add115",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean34:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:198",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add115:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt17",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add115:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt17:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide33",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt17:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide33:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply34",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide33:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:199",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply34:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add116",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply34:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:200",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add116:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul65",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add116:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:201",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul65:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add117",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul65:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:202",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add117:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape49",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add117:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape49:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose33",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape49:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose33:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten33",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose33:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten33:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul66",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add116:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:203",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add118",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:204",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add118:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape50",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add118:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape50:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose34",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape50:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose34:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten34",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose34:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten34:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul67",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten33:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten34:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul67:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape51",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul67:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape51:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide34",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape51:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:205",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide34:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add119",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide34:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add119:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax9",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add119:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax9:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten35",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax9:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten35:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul68",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add116:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:206",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul68:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add120",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul68:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:207",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add120:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape52",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add120:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape52:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose35",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape52:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose35:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten36",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose35:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten36:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul69",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten35:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten36:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul69:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape53",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul69:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape53:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose36",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape53:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose36:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape54",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose36:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul70",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape54:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:208",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul70:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add121",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul70:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:209",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add121:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add122",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add121:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add116:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add122:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean35",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add122:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean35:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub19",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add122:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean35:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow18",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:210",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean36",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow18:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean36:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add123",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean36:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:211",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add123:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt18",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add123:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt18:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide35",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt18:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide35:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply35",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide35:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:212",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply35:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add124",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply35:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:213",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add124:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul71",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add124:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:214",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul71:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add125",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul71:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:215",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add125:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide36",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add125:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:216",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide36:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf9",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide36:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf9:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add126",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf9:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:217",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add126:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply36",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add125:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add126:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply36:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply37",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply36:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:218",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply37:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul72",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply37:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:219",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add127",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:220",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add127:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add128",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add127:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add124:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add128:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean37",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add128:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean37:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub20",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add128:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean37:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow19",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:221",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean38",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow19:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean38:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add129",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean38:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:222",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add129:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt19",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add129:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt19:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide37",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt19:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide37:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply38",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide37:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:223",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add130",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply38:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:224",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add130:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul73",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add130:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:225",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul73:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add131",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul73:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:226",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add131:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape55",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add131:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape55:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose37",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape55:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose37:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten37",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose37:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten37:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul74",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add130:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:227",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add132",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul74:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:228",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add132:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape56",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add132:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape56:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose38",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape56:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose38:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten38",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose38:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten38:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul75",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten37:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten38:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul75:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape57",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul75:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape57:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide38",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape57:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:229",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide38:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add133",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide38:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add133:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax10",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add133:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax10:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten39",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax10:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten39:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul76",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add130:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:230",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul76:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add134",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul76:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:231",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add134:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape58",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add134:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape58:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose39",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape58:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose39:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten40",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose39:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten40:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul77",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten39:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten40:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul77:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape59",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul77:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape59:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose40",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape59:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose40:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape60",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose40:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul78",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape60:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:232",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul78:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add135",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul78:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:233",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add135:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add136",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add135:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add130:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add136:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean39",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add136:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean39:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub21",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add136:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean39:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow20",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:234",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean40",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow20:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean40:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add137",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean40:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:235",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add137:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt20",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add137:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt20:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide39",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt20:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide39:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply39",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide39:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:236",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply39:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add138",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply39:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:237",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add138:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul79",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add138:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:238",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul79:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add139",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul79:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:239",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add139:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide40",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add139:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:240",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide40:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf10",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide40:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf10:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add140",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf10:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:241",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add140:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply40",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add139:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add140:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply40:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply41",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply40:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:242",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply41:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul80",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply41:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:243",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul80:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add141",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul80:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:244",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add141:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add142",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add141:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add138:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add142:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean41",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add142:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean41:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub22",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add142:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean41:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow21",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:245",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean42",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow21:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean42:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add143",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean42:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:246",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add143:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt21",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add143:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt21:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide41",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt21:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide41:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply42",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide41:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:247",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply42:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add144",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply42:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:248",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add144:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul81",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add144:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:249",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul81:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add145",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul81:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:250",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add145:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape61",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add145:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape61:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose41",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape61:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose41:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten41",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose41:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten41:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul82",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add144:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:251",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul82:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add146",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul82:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:252",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add146:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape62",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add146:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape62:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose42",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape62:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose42:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten42",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose42:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten42:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul83",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten41:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten42:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul83:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape63",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul83:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape63:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide42",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape63:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:253",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide42:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add147",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide42:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add147:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax11",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add147:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax11:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten43",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax11:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten43:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul84",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add144:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:254",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul84:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add148",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul84:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:255",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add148:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape64",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add148:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape64:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose43",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape64:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose43:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten44",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose43:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten44:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul85",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten43:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten44:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul85:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape65",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul85:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape65:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose44",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape65:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose44:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape66",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose44:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul86",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape66:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:256",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul86:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add149",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul86:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:257",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add149:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add150",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add149:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add144:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add150:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean43",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add150:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean43:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub23",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add150:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean43:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow22",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:258",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean44",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow22:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean44:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add151",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean44:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:259",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add151:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt22",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add151:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt22:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide43",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt22:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide43:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply43",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide43:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:260",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply43:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add152",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply43:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:261",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add152:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul87",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add152:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:262",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul87:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add153",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul87:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:263",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add153:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide44",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add153:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:264",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide44:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf11",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide44:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf11:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add154",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf11:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:265",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add154:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply44",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add153:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add154:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply44:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply45",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply44:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:266",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply45:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul88",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply45:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:267",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add155",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul88:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:268",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add155:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add156",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add155:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add152:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add156:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean45",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add156:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean45:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub24",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add156:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean45:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow23",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:269",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean46",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow23:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean46:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add157",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean46:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:270",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add157:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt23",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add157:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt23:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide45",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt23:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide45:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply46",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide45:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:271",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add158",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply46:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:272",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add158:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul89",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add158:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:273",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul89:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add159",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul89:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:274",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add159:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape67",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add159:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape67:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose45",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape67:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose45:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten45",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose45:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten45:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul90",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add158:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:275",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul90:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add160",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul90:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:276",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add160:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape68",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add160:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape68:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose46",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape68:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose46:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 3, 1]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 64, 128), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_3 / 1) % 128), ((v_1 / 1) % 12), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten46",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose46:0",
                  "type": {
                    "string": "float32[1, 12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten46:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 64, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 64), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 64, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul91",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten45:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten46:0",
                  "type": {
                    "string": "float32[12, 64, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        64,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul91:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 128), axes=(v, v_1, v_2), value=ReduceCompute(shape=(64), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 64, 128], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape69",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul91:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape69:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 128]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 16384) % 12), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 128) % 128), ((((((0 + (v * 196608)) + (v_1 * 16384)) + (v_2 * 128)) + (v_3 * 1)) / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide46",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape69:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:277",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "8.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide46:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add161",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide46:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Multiply2:0",
                  "type": {
                    "string": "float32[1, 1, 1, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        1,
                        1,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add161:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 12, 128, 128), axes=(v, v_1, v_2, v_3), value=(x[0, v_1, v_2, v_3] + y[0, 0, 0, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 1, 1, 128], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Softmax12",
          "type": {
            "name": "Softmax",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add161:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax12:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "3",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: softmax",
            "  compute: CustomCompute(name=out, identifier=softmax, data_type=TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), params=[x], attributes={axis: 3})",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), out: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten47",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Softmax12:0",
                  "type": {
                    "string": "float32[1, 12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten47:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 128), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 128)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 128], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul92",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add158:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:278",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul92:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add162",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul92:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:279",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add162:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape70",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add162:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape70:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 12, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 98304) % 1), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 768) % 128), ((((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 768)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose47",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape70:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose47:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 128), ((v_1 / 1) % 12), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Flatten48",
          "type": {
            "name": "Flatten",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose47:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten48:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "start_dim",
              "type": "int",
              "value": "0",
              "visible": true,
              "description": ""
            },
            {
              "name": "end_dim",
              "type": "int",
              "value": "2",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(12, 128, 64), axes=(v, v_1, v_2), value=x[((v / 12) % 1), ((v / 1) % 12), ((v_1 / 1) % 128), ((v_2 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul93",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Flatten47:0",
                  "type": {
                    "string": "float32[12, 128, 128]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        128
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Flatten48:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul93:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(12, 128, 64), axes=(v, v_1, v_2), value=ReduceCompute(shape=(128), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [12, 128, 128], global, RowMajorLayout), B: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), C: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape71",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul93:0",
                  "type": {
                    "string": "float32[12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape71:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 12, 128, 64]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 12, 128, 64), axes=(v, v_1, v_2, v_3), value=x[((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 8192) % 12), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 64) % 128), ((((((0 + (v * 98304)) + (v_1 * 8192)) + (v_2 * 64)) + (v_3 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Transpose48",
          "type": {
            "name": "Transpose",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape71:0",
                  "type": {
                    "string": "float32[1, 12, 128, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        12,
                        128,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose48:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axes",
              "type": "Sequence[int]",
              "value": "[0, 2, 1, 3]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: rearrange",
            "  compute: TensorCompute(y, shape=(1, 128, 12, 64), axes=(v, v_1, v_2, v_3), value=x[((v / 1) % 1), ((v_2 / 1) % 12), ((v_1 / 1) % 128), ((v_3 / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 12, 128, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Reshape72",
          "type": {
            "name": "Reshape",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Transpose48:0",
                  "type": {
                    "string": "float32[1, 128, 12, 64]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        12,
                        64
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": "Sequence[int]",
              "value": "[1, 128, 768]",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reshape",
            "  compute: TensorCompute(y, shape=(1, 128, 768), axes=(v, v_1, v_2), value=x[(((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 98304) % 1), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 768) % 128), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 64) % 12), (((((0 + (v * 98304)) + (v_1 * 768)) + (v_2 * 1)) / 1) % 64)])",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 12, 64], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul94",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Reshape72:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:280",
                  "type": {
                    "string": "float32[1, 768, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul94:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add163",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul94:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:281",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add163:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add164",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add163:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add158:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add164:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean47",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add164:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean47:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub25",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add164:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean47:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow24",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:282",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean48",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow24:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean48:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add165",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean48:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:283",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add165:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt24",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add165:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt24:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide47",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt24:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide47:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply47",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide47:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:284",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply47:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add166",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply47:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:285",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add166:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul95",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add166:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:286",
                  "type": {
                    "string": "float32[1, 768, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        768,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul95:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 768, 3072], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add167",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul95:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:287",
                  "type": {
                    "string": "float32[3072]",
                    "shape": {
                      "dimensions": [
                        3072
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add167:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide48",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add167:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:288",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.4142135"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide48:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Erf12",
          "type": {
            "name": "Erf",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide48:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf12:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=erff(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add168",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Erf12:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:289",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add168:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply48",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add167:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add168:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply48:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply49",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply48:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:290",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0.5"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply49:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 3072), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "BatchedMatmul96",
          "type": {
            "name": "BatchedMatmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply49:0",
                  "type": {
                    "string": "float32[1, 128, 3072]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        3072
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:291",
                  "type": {
                    "string": "float32[1, 3072, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        3072,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul96:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: batched_matmul",
            "  compute: TensorCompute(C, shape=(1, 128, 768), axes=(v, v_1, v_2), value=ReduceCompute(shape=(3072), axes=(v_3), value=(A[v, v_1, v_3] * B[v, v_3, v_2])))",
            "  params: A: TensorType(ScalarType(float32), [1, 128, 3072], global, RowMajorLayout), B: TensorType(ScalarType(float32), [1, 3072, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add169",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "BatchedMatmul96:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:292",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add169:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add170",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add169:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Add166:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add170:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[0, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean49",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add170:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean49:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sub26",
          "type": {
            "name": "Sub",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add170:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "ReduceMean49:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sub",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] - y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Pow25",
          "type": {
            "name": "Pow",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:293",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "2.0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: pow",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=powf(x[0, v_1, v_2], y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "ReduceMean50",
          "type": {
            "name": "ReduceMean",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Pow25:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean50:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "dims",
              "type": "Sequence[int]",
              "value": "[2]",
              "visible": true,
              "description": ""
            },
            {
              "name": "keep_dim",
              "type": "bool",
              "value": "True",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: reduce_mean",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=ReduceCompute(shape=(768), axes=(v_3), value=x[v, v_1, v_3]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add171",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "ReduceMean50:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:294",
                  "type": {
                    "string": "float32[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "1e-12"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add171:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 1), axes=(v, v_1, v_2), value=(x[0, v_1, 0] + y[]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Sqrt25",
          "type": {
            "name": "Sqrt",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add171:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sqrt25:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: sqrt",
            "  compute: TensorCompute(y, shape=(1, 128, 1), axes=(v, v_1, v_2), value=sqrtf(x[v, v_1, v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Divide49",
          "type": {
            "name": "Divide",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Sub26:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "Sqrt25:0",
                  "type": {
                    "string": "float32[1, 128, 1]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        1
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide49:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: div",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] / y[0, v_1, 0]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 128, 1], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Multiply50",
          "type": {
            "name": "Multiply",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Divide49:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:295",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply50:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: mul",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] * y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add172",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Multiply50:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:296",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add172:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 128, 768), axes=(v, v_1, v_2), value=(x[0, v_1, v_2] + y[v_2]))",
            "  params: x: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Take3",
          "type": {
            "name": "Take",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add172:0",
                  "type": {
                    "string": "float32[1, 128, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        128,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:297",
                  "type": {
                    "string": "int64[]",
                    "shape": {
                      "dimensions": []
                    },
                    "dataType": "int64"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "0"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Take3:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [
            {
              "name": "axis",
              "type": "int",
              "value": "1",
              "visible": true,
              "description": ""
            }
          ],
          "description": [
            "Task(",
            "  name: take",
            "  compute: TensorCompute(output, shape=(1, 768), axes=(v, v_1), value=data[v, indices[], v_1])",
            "  params: data: TensorType(ScalarType(float32), [1, 128, 768], global, RowMajorLayout), indices: TensorType(ScalarType(int64), [], global, RowMajorLayout), output: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Matmul1",
          "type": {
            "name": "Matmul",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Take3:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:298",
                  "type": {
                    "string": "float32[768, 768]",
                    "shape": {
                      "dimensions": [
                        768,
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Matmul1:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: matmul",
            "  compute: TensorCompute(C, shape=(1, 768), axes=(v, v_1), value=ReduceCompute(shape=(768), axes=(v_2), value=(A[v, v_2] * B[v_2, v_1])))",
            "  params: A: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout), B: TensorType(ScalarType(float32), [768, 768], global, RowMajorLayout), C: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Add173",
          "type": {
            "name": "Add",
            "category": "transform"
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Matmul1:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "1",
              "arguments": [
                {
                  "name": "const:299",
                  "type": {
                    "string": "float32[768]",
                    "shape": {
                      "dimensions": [
                        768
                      ]
                    },
                    "dataType": "float32"
                  },
                  "initializer": {
                    "kind": "Initializer",
                    "value": "<>"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add173:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: add",
            "  compute: TensorCompute(z, shape=(1, 768), axes=(v, v_1), value=(x[0, v_1] + y[v_1]))",
            "  params: x: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [768], global, RowMajorLayout), z: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        },
        {
          "name": "Tanh1",
          "type": {
            "name": "Tanh",
            "category": null
          },
          "inputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Add173:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "outputs": [
            {
              "name": "0",
              "arguments": [
                {
                  "name": "Tanh1:0",
                  "type": {
                    "string": "float32[1, 768]",
                    "shape": {
                      "dimensions": [
                        1,
                        768
                      ]
                    },
                    "dataType": "float32"
                  }
                }
              ],
              "visible": true
            }
          ],
          "attributes": [],
          "description": [
            "Task(",
            "  name: erf",
            "  compute: TensorCompute(y, shape=(1, 768), axes=(v, v_1), value=tanhf(x[v, v_1]))",
            "  params: x: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout), y: TensorType(ScalarType(float32), [1, 768], global, RowMajorLayout)",
            "  worker: Grid(None, None)",
            ")"
          ]
        }
      ]
    }
  ],
  "description": "Converted from FlowGraph",
  "author": "",
  "company": "",
  "license": "",
  "domain": "",
  "source": "Hidet",
  "format": "netron"
}